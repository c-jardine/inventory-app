// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch"]
}

datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

model Vendor {
    id        Int        @id @default(autoincrement())
    name      String     @unique
    url       String?
    materials Material[]
}

model StockUnit {
    id                   Int        @id @default(autoincrement())
    nameSingular         String     @unique
    namePlural           String     @unique
    abbreviationSingular String     @unique
    abbreviationPlural   String     @unique
    category             String
    materials            Material[]
    products             Product[]
}

model Material {
    id          Int                @id @default(autoincrement())
    name        String
    url         String?
    categories  Category[]
    stock       Decimal
    stockUnit   StockUnit          @relation(fields: [stockUnitId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    minStock    Decimal?
    costPerUnit Decimal
    vendor      Vendor             @relation(fields: [vendorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    vendorId    Int
    product     Product?           @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    productId   Int?
    stockUnitId Int
    stockLogs   MaterialStockLog[]
    createdAt   DateTime           @default(now())
}

model Category {
    id        Int        @id @default(autoincrement())
    name      String     @unique
    slug      String     @unique
    color     String     @default("#E2E8F0")
    materials Material[]
}

model MaterialStockLogType {
    id   Int                @id @default(autoincrement())
    name String             @unique
    logs MaterialStockLog[]
}

model MaterialStockLog {
    id         Int                  @id @default(autoincrement())
    material   Material             @relation(fields: [materialId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    materialId Int
    logType    MaterialStockLogType @relation(fields: [logTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    logTypeId  Int
    prevStock  Decimal
    stock      Decimal
    notes      String?
    createdAt  DateTime             @default(now())
}

model Product {
    id             Int        @id @default(autoincrement())
    name           String
    category       String
    stock          Decimal
    stockUnit      StockUnit  @relation(fields: [stockUnitId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    minStock       Decimal
    msrp           Decimal
    wholesalePrice Decimal
    materials      Material[]
    stockUnitId    Int
}
